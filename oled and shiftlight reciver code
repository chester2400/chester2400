//#include <I2CTransfer.h>
#include <EEPROM.h>
#include <Packet.h>
#include <PacketCRC.h>
#include <SerialTransfer.h>
//#include <SPITransfer.h>







#include <Adafruit_NeoPixel.h>
#ifdef __AVR__
  #include <avr/power.h>
#endif
#define PIN        6
#define NUMPIXELS 5

Adafruit_NeoPixel pixels(NUMPIXELS, PIN, NEO_GRB + NEO_KHZ800);
#define DELAYVAL 500
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>

#define SCREEN_WIDTH 128 // OLED display width, in pixels
#define SCREEN_HEIGHT 64 // OLED display height, in pixels
// Declaration for an SSD1306 display connected to I2C (SDA, SCL pins)
#define OLED_RESET     -1 // Reset pin # (or -1 if sharing Arduino reset pin)
//#define OLED_RESET     10 // Reset pin # (or -1 if sharing Arduino reset pin)
//#define OLED_CS     255
Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);


// array for menu
const char string_0[] PROGMEM = "Setspeed/decel: "; 
const char string_1[] PROGMEM = "Cancel/accel: ";
const char string_2[] PROGMEM = "Brake: ";
const char string_3[] PROGMEM = "SPEED: ";
const char string_4[] PROGMEM = "ON";
const char string_5[] PROGMEM = "OFF";
const char string_6[] PROGMEM = " Set PID "; 
const char string_7[] PROGMEM = "low";
const char string_8[] PROGMEM = "high";
const char string_9[] PROGMEM = ">Proportional ";
const char string_10[] PROGMEM = " Proportional ";
const char string_11[] PROGMEM = ">Integral ";
const char string_12[] PROGMEM = " Integral "; 
const char string_13[] PROGMEM = ">Derivative ";
const char string_14[] PROGMEM = " Derivative ";
const char string_15[] PROGMEM = "STORED";
const char string_16[] PROGMEM = ">Set PID ";
const char string_17[] PROGMEM = " Speed sensor";
const char string_18[] PROGMEM = ">Speed sensor";
const char string_19[] PROGMEM = "   SETUP";
const char string_20[] PROGMEM = " Pulses per";
const char string_21[] PROGMEM = " revolution: ";
const char string_22[] PROGMEM = "quickshiter: ";
const char string_23[] PROGMEM = " shift time: ";
const char string_24[] PROGMEM = ">shift time: ";
const char string_25[] PROGMEM = "RPM: ";
const char string_26[] PROGMEM = " set gear rato";
const char string_27[] PROGMEM = ">set gear rato";
const char string_28[] PROGMEM = " Gear display: ";
const char string_29[] PROGMEM = ">Gear display: ";
const char string_30[] PROGMEM = " Display gear ratio";
const char string_31[] PROGMEM = ">Display gear ratio";
const char string_32[] PROGMEM = "1st gear: ";
const char string_33[] PROGMEM = "2nd gear: ";
const char string_34[] PROGMEM = "3ed gear: ";
const char string_35[] PROGMEM = "4th gear: ";
const char string_36[] PROGMEM = "5th gear: ";
const char string_37[] PROGMEM = "6th gear: ";
const char string_38[] PROGMEM = " Shiftlight setup ";
const char string_39[] PROGMEM = " Start RPM ";
const char string_40[] PROGMEM = " End RPM ";
const char string_41[] PROGMEM = " Shiftlight: ";
const char string_42[] PROGMEM = ">Shiftlight setup ";
const char string_43[] PROGMEM = ">Start RPM ";
const char string_44[] PROGMEM = ">End RPM ";
const char string_45[] PROGMEM = ">Shiftlight: ";
const char string_46[] PROGMEM = " set general QS time";
const char string_47[] PROGMEM = " set gear 1 QS time";
const char string_48[] PROGMEM = " set gear 2> QS time";
const char string_49[] PROGMEM = ">set general QS time";
const char string_50[] PROGMEM = ">set gear 1 QS time";
const char string_51[] PROGMEM = ">set gear 2> QS time";
const char string_52[] PROGMEM = " 0-2k rpm QS time";
const char string_53[] PROGMEM = " 3K rpm QS time";
const char string_54[] PROGMEM = " 6k rpm QS time";
const char string_55[] PROGMEM = " 9k rpm QS time"; 
const char string_56[] PROGMEM = " 12k rpm QS time";
const char string_57[] PROGMEM = ">0 - 2k rpm QS time";
const char string_58[] PROGMEM = ">3K rpm QS time";
const char string_59[] PROGMEM = ">6k rpm QS time";
const char string_60[] PROGMEM = ">9k rpm QS time"; 
const char string_61[] PROGMEM = ">12k rpm QS time";
const char string_62[] PROGMEM = ">restore defaults"; 
const char string_63[] PROGMEM = " restore defaults";
const char string_64[] PROGMEM = "DEFAULTS RESTORED";
const char string_65[] PROGMEM = ">set curent sensor";
const char string_66[] PROGMEM = " set curent sensor";
const char string_67[] PROGMEM = " TPS input";
const char string_68[] PROGMEM = ">TPS input";
const char string_69[] PROGMEM = ">curent sensor: ";
const char string_70[] PROGMEM = " curent sensor: ";
const char string_71[] PROGMEM = ">set sensor offset";
const char string_72[] PROGMEM = " set sensor offset";
const char string_73[] PROGMEM = ">tps input: ";
const char string_74[] PROGMEM = " tps input: ";
const char string_75[] PROGMEM = " set throtle levels";
const char string_76[] PROGMEM = ">set throtle levels";
const char string_77[] PROGMEM = " 40";
const char string_78[] PROGMEM = " 80";
const char string_79[] PROGMEM = " 120";
const char string_80[] PROGMEM = " 160";
const char string_81[] PROGMEM = ">set speed muliplier";
const char string_82[] PROGMEM = " set speed muliplier";
const char string_83[] PROGMEM = ">set low speed";
const char string_84[] PROGMEM = " set low speed";
const char string_85[] PROGMEM = ">set medium speed";
const char string_86[] PROGMEM = " set medium speed";
const char string_87[] PROGMEM = ">set high speed";
const char string_88[] PROGMEM = " set high speed";
const char string_89[] PROGMEM = ">Set servo home position";
const char string_90[] PROGMEM = " Set servo home position";
const char string_91[] PROGMEM = ">Set servo end position";
const char string_92[] PROGMEM = " Set servo end position";




const char *const string_table[] PROGMEM = {string_0, string_1, string_2, string_3, string_4, string_5,string_6, string_7, string_8, string_9, string_10, string_11,string_12, string_13, string_14, string_15, string_16, string_17, string_18, string_19, string_20, string_21, string_22, string_23, string_24, string_25, string_26, string_27, string_28, string_29, string_30, string_31, string_32, string_33, string_34, string_35, string_36, string_37, string_38, string_39, string_40, string_41, string_42, string_43, string_44, string_45, string_46, string_47, string_48, string_49, string_50, string_51, string_52, string_53, string_54, string_55, string_56, string_57, string_58, string_59, string_60, string_61, string_62, string_63, string_64, string_65, string_66, string_67, string_68, string_69, string_70, string_71, string_72, string_73, string_74, string_75, string_76, string_77, string_78, string_79, string_80, string_81, string_82, string_83, string_84, string_85, string_86, string_87, string_88, string_89, string_90, string_91, string_92};


char buffer[25];


static const unsigned char PROGMEM Logo [] = { 
0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x03, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xE0, 0x00, 0x00,
0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0, 0x00,
0x00, 0x3F, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x7F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFC, 0x00,
0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x80,
0x03, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x07, 0xF3, 0xFF, 0xFF, 0xFF, 0xF7, 0xFB, 0xC0,
0x07, 0xEF, 0xFF, 0xFF, 0xFD, 0xEF, 0xFB, 0xE0, 0x0F, 0xDF, 0xFC, 0xFF, 0xFD, 0x6F, 0xF3, 0xE0,
0x0F, 0xDE, 0xFD, 0xFF, 0xFD, 0x6F, 0xF7, 0xF0, 0x1F, 0xBE, 0xCD, 0x0F, 0xB9, 0x52, 0xC7, 0xF0,
0x1F, 0xBE, 0x15, 0x0F, 0x39, 0x8A, 0x4F, 0xF0, 0x1F, 0xBC, 0x32, 0x6F, 0xB9, 0x00, 0x0F, 0xF0,
0x1F, 0xC5, 0x20, 0x6F, 0xBB, 0xA0, 0xA7, 0xF8, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xBF, 0xF8,
0x3E, 0x3C, 0xE0, 0xF3, 0xE1, 0x83, 0xF8, 0xF8, 0x3C, 0x98, 0x60, 0x71, 0xC5, 0x8B, 0xF0, 0x78,
0x39, 0xF8, 0x62, 0x71, 0xCF, 0x9F, 0xE7, 0x38, 0x39, 0xFA, 0x62, 0x60, 0x8F, 0x87, 0xEF, 0x9C,
0x39, 0xFA, 0x60, 0xEC, 0x8F, 0x8F, 0xCF, 0x98, 0x39, 0x10, 0x20, 0xE0, 0x88, 0x9F, 0xEF, 0x9C,
0x39, 0x92, 0x22, 0x6C, 0xC9, 0x9F, 0xE7, 0x38, 0x3C, 0x93, 0x22, 0x0C, 0x41, 0x83, 0xF0, 0x78,
0x3E, 0x37, 0x37, 0x4E, 0x61, 0x83, 0xFF, 0xF8, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8,
0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF8, 0x1F, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xF0,
0x1F, 0xEC, 0x51, 0x52, 0xF1, 0x4D, 0x6F, 0xF0, 0x0F, 0xE4, 0x59, 0x32, 0x71, 0x6B, 0x6F, 0xF0,
0x0F, 0xE3, 0x59, 0x33, 0x3D, 0x71, 0x6F, 0xF0, 0x0F, 0xFB, 0xDF, 0xDF, 0xFF, 0xFF, 0xEF, 0xE0,
0x07, 0xFE, 0xE9, 0x75, 0x59, 0xCE, 0xFF, 0xE0, 0x07, 0xFC, 0x90, 0x34, 0x01, 0x81, 0xFF, 0xC0,
0x03, 0xFC, 0x51, 0x31, 0x21, 0xD1, 0xFF, 0xC0, 0x03, 0xFD, 0xCA, 0x55, 0x4B, 0xDA, 0xFF, 0x80,
0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0xFF, 0x00,
0x00, 0xFF, 0xC0, 0x01, 0x54, 0x87, 0xFE, 0x00, 0x00, 0x7F, 0xC0, 0x21, 0x54, 0x87, 0xFC, 0x00,
0x00, 0x3F, 0xC0, 0x21, 0x54, 0x87, 0xF8, 0x00, 0x00, 0x1F, 0xC0, 0x01, 0x54, 0x07, 0xF0, 0x00,
0x00, 0x0F, 0xFF, 0xFF, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFF, 0xFF, 0xC0, 0x00,
0x00, 0x01, 0xFF, 0xFF, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00,
0x00, 0x00, 0x3F, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xE0, 0x00, 0x00,
0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF8, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 
};

static const unsigned char PROGMEM Ready [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x87, 0xF8, 0x60, 0x66, 0x1F, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3F, 0xC7, 0xFC, 0x60, 0x66, 0x3F, 0x8F, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x30, 0xE6, 0x0E, 0x60, 0x66, 0x61, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x60, 0x46, 0x06, 0x60, 0x66, 0x60, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x60, 0x06, 0x0E, 0x60, 0x66, 0x78, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x60, 0x07, 0xFC, 0x60, 0x66, 0x3F, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x60, 0x07, 0xF0, 0x60, 0x66, 0x0F, 0x8F, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x60, 0x06, 0x38, 0x60, 0x66, 0x01, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x60, 0x46, 0x1C, 0x60, 0x66, 0x60, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x30, 0xE6, 0x0C, 0x70, 0xE6, 0x71, 0xCC, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3F, 0xC6, 0x0E, 0x3F, 0xC6, 0x3F, 0x8F, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x86, 0x07, 0x1F, 0x86, 0x1F, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x06, 0x06, 0xFF, 0xDF, 0xE0, 0x3C, 0x18, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xFC, 0x3F, 0xC7, 0x06, 0xFF, 0xDF, 0xF0, 0xFF, 0x18, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0x0E, 0x30, 0xC7, 0x86, 0x0C, 0x18, 0x38, 0xC3, 0x18, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x04, 0x60, 0x67, 0x86, 0x0C, 0x18, 0x19, 0x81, 0x98, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x60, 0x66, 0xC6, 0x0C, 0x18, 0x39, 0x81, 0x98, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x60, 0x66, 0x66, 0x0C, 0x1F, 0xF1, 0x81, 0x98, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x60, 0x66, 0x66, 0x0C, 0x1F, 0xC1, 0x81, 0x98, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x00, 0x60, 0x66, 0x36, 0x0C, 0x18, 0xE1, 0x81, 0x98, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x06, 0x04, 0x60, 0x66, 0x1E, 0x0C, 0x18, 0x71, 0x81, 0x98, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0x0E, 0x30, 0xC6, 0x1E, 0x0C, 0x18, 0x30, 0xC3, 0x18, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xFC, 0x3F, 0xC6, 0x0E, 0x0C, 0x18, 0x38, 0xFF, 0x1F, 0xE0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xF8, 0x0F, 0x06, 0x06, 0x0C, 0x18, 0x1C, 0x3C, 0x1F, 0xE0, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x7F, 0xC1, 0xC1, 0xFC, 0x30, 0x30, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0x7F, 0xC1, 0xC1, 0xFF, 0x38, 0x70, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x06, 0x0E, 0x60, 0x03, 0x61, 0x83, 0x18, 0x60, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x06, 0x06, 0x60, 0x03, 0x61, 0x81, 0x8C, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x06, 0x0E, 0x60, 0x03, 0x61, 0x81, 0x8C, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0x7F, 0xC6, 0x31, 0x81, 0x87, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x7F, 0xC6, 0x31, 0x81, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x06, 0x38, 0x60, 0x07, 0xF1, 0x81, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x06, 0x1C, 0x60, 0x0F, 0xF9, 0x81, 0x83, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x06, 0x0C, 0x60, 0x0C, 0x19, 0x83, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x06, 0x0E, 0x7F, 0xCC, 0x19, 0xFF, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x06, 0x07, 0x7F, 0xD8, 0x0D, 0xFC, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};





static const unsigned char PROGMEM qson []={
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xE0, 0xC0, 0xCC, 0x1F, 0x0C, 0x0C, 0x3E, 0x18, 0x19, 0x9F, 0xE7, 0xFD, 0xFF, 0xBF, 0xC0,
0x07, 0xF8, 0xC0, 0xCC, 0x7F, 0x8C, 0x18, 0x7F, 0x18, 0x19, 0x9F, 0xE7, 0xFD, 0xFF, 0xBF, 0xE0,
0x06, 0x18, 0xC0, 0xCC, 0x61, 0xCC, 0x30, 0xC3, 0x98, 0x19, 0x98, 0x06, 0x00, 0x18, 0x30, 0x70,
0x0C, 0x0C, 0xC0, 0xCC, 0xC0, 0x8C, 0x60, 0xC1, 0x98, 0x19, 0x98, 0x06, 0x00, 0x18, 0x30, 0x30,
0x0C, 0x0C, 0xC0, 0xCC, 0xC0, 0x0C, 0xC0, 0xF0, 0x18, 0x19, 0x98, 0x06, 0x00, 0x18, 0x30, 0x70,
0x0C, 0x0C, 0xC0, 0xCC, 0xC0, 0x0D, 0xE0, 0x7E, 0x1F, 0xF9, 0x9F, 0xC7, 0xFC, 0x18, 0x3F, 0xE0,
0x0C, 0x0C, 0xC0, 0xCC, 0xC0, 0x0F, 0x60, 0x1F, 0x1F, 0xF9, 0x9F, 0xC7, 0xFC, 0x18, 0x3F, 0x80,
0x0C, 0x0C, 0xC0, 0xCC, 0xC0, 0x0E, 0x30, 0x03, 0x98, 0x19, 0x98, 0x06, 0x00, 0x18, 0x31, 0xC0,
0x0C, 0xCC, 0xC0, 0xCC, 0xC0, 0x8C, 0x30, 0xC1, 0x98, 0x19, 0x98, 0x06, 0x00, 0x18, 0x30, 0xE0,
0x06, 0x78, 0xE1, 0xCC, 0x61, 0xCC, 0x18, 0xE3, 0x98, 0x19, 0x98, 0x06, 0x00, 0x18, 0x30, 0x60,
0x07, 0xF8, 0x7F, 0x8C, 0x7F, 0x8C, 0x1C, 0x7F, 0x18, 0x19, 0x98, 0x07, 0xFC, 0x18, 0x30, 0x70,
0x01, 0xD8, 0x3F, 0x0C, 0x1F, 0x0C, 0x0C, 0x3E, 0x18, 0x19, 0x98, 0x07, 0xFC, 0x18, 0x30, 0x38,
0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0xF0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x78, 0xF8, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0xFC, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x1C, 0xEC, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x1C, 0xEE, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x1C, 0xE6, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x70, 0x1C, 0xE7, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x78, 0x3C, 0xE3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3C, 0x78, 0xE3, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xF8, 0xE1, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0xE1, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0xE0, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  
};


static const unsigned char PROGMEM qsoff []={
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x01, 0xE0, 0xC0, 0xCC, 0x1F, 0x0C, 0x0C, 0x3E, 0x18, 0x19, 0x9F, 0xE7, 0xFD, 0xFF, 0xBF, 0xC0,
0x07, 0xF8, 0xC0, 0xCC, 0x7F, 0x8C, 0x18, 0x7F, 0x18, 0x19, 0x9F, 0xE7, 0xFD, 0xFF, 0xBF, 0xE0,
0x06, 0x18, 0xC0, 0xCC, 0x61, 0xCC, 0x30, 0xC3, 0x98, 0x19, 0x98, 0x06, 0x00, 0x18, 0x30, 0x70,
0x0C, 0x0C, 0xC0, 0xCC, 0xC0, 0x8C, 0x60, 0xC1, 0x98, 0x19, 0x98, 0x06, 0x00, 0x18, 0x30, 0x30,
0x0C, 0x0C, 0xC0, 0xCC, 0xC0, 0x0C, 0xC0, 0xF0, 0x18, 0x19, 0x98, 0x06, 0x00, 0x18, 0x30, 0x70,
0x0C, 0x0C, 0xC0, 0xCC, 0xC0, 0x0D, 0xE0, 0x7E, 0x1F, 0xF9, 0x9F, 0xC7, 0xFC, 0x18, 0x3F, 0xE0,
0x0C, 0x0C, 0xC0, 0xCC, 0xC0, 0x0F, 0x60, 0x1F, 0x1F, 0xF9, 0x9F, 0xC7, 0xFC, 0x18, 0x3F, 0x80,
0x0C, 0x0C, 0xC0, 0xCC, 0xC0, 0x0E, 0x30, 0x03, 0x98, 0x19, 0x98, 0x06, 0x00, 0x18, 0x31, 0xC0,
0x0C, 0xCC, 0xC0, 0xCC, 0xC0, 0x8C, 0x30, 0xC1, 0x98, 0x19, 0x98, 0x06, 0x00, 0x18, 0x30, 0xE0,
0x06, 0x78, 0xE1, 0xCC, 0x61, 0xCC, 0x18, 0xE3, 0x98, 0x19, 0x98, 0x06, 0x00, 0x18, 0x30, 0x60,
0x07, 0xF8, 0x7F, 0x8C, 0x7F, 0x8C, 0x1C, 0x7F, 0x18, 0x19, 0x98, 0x07, 0xFC, 0x18, 0x30, 0x70,
0x01, 0xD8, 0x3F, 0x0C, 0x1F, 0x0C, 0x0C, 0x3E, 0x18, 0x19, 0x98, 0x07, 0xFC, 0x18, 0x30, 0x38,
0x00, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1F, 0xF9, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x1F, 0xF9, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x1F, 0xF9, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x8F, 0x1C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x07, 0x9C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x03, 0x9F, 0xF1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x03, 0x9F, 0xF1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x03, 0x9F, 0xF1, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0E, 0x03, 0x9C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x07, 0x9C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x8F, 0x1C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x1C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x1C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x1C, 0x01, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00  
};




static const unsigned char PROGMEM cruise [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x78, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xFF, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xFF, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xFF, 0xB0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x07, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x03, 0xFF, 0xF0, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x01, 0xFF, 0xF0, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x0F, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x3F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x3F, 0xF0, 0xFF, 0xFF, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x7F, 0xF1, 0xFF, 0x83, 0xC3, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFF, 0xF3, 0xFC, 0x03, 0xC0, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0xFF, 0xF7, 0xF0, 0x03, 0xC0, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x03, 0xC0, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0x80, 0x03, 0xC0, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x03, 0xC0, 0x01, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x01, 0x80, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xF0, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xF0, 0x00, 0x00, 0x1F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xF1, 0xF8, 0x00, 0x00, 0x3F, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0xF0, 0x00, 0x00, 0x3F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x66, 0x00, 0x00, 0x3C, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x0F, 0x00, 0x00, 0x18, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x0F, 0x80, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x0F, 0xC0, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x07, 0xE0, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x03, 0xF0, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x01, 0xF8, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0xFC, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0xFF, 0x80, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x7F, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x3F, 0xE0, 0x00, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xF0, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x1F, 0xF0, 0x01, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x03, 0x80, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x07, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x00, 0x00, 0x00, 0x0E, 0x0F, 0x80, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x03, 0xE0, 0x70, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0xF0, 0x00, 0x00, 0x1F, 0x1F, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x01, 0xF9, 0xF0, 0x00, 0x00, 0x1F, 0xBF, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFB, 0xF0, 0x00, 0x00, 0x0F, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xE0, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x03, 0x80, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0x03, 0xC0, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0, 0x07, 0xC0, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x07, 0xC0, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x07, 0xC0, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x07, 0xC0, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xC7, 0xC7, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};



static const unsigned char PROGMEM gear1 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFB, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF3, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xE3, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x83, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};


static const unsigned char PROGMEM gear2 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x0F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF8, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM gear3 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0x7F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x3F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xE0, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xE0, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xF0, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFC, 0x3F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM gear4 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xE0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xC0, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0x80, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM gear5 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFF, 0xFF, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x0F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xF0, 0x03, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xF0, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x01, 0xFE, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFC, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xFE, 0x0F, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM gear6 [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x1F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x07, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF1, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF7, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xEF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFE, 0x1F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF8, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xF0, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF0, 0x03, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x07, 0xF8, 0x07, 0xFC, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFC, 0x07, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xFE, 0x0F, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xFF, 0xFF, 0xF0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xFF, 0xFF, 0xE0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xC0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0F, 0xFF, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xF8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};

static const unsigned char PROGMEM gearN [] = {
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xC0, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xE0, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF0, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xF8, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFC, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFE, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x00, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0x80, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xC0, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xC0, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xFF, 0xE0, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0xBF, 0xE0, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x9F, 0xF0, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x9F, 0xF8, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x8F, 0xF8, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x8F, 0xFC, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x87, 0xFE, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x83, 0xFE, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x83, 0xFF, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x81, 0xFF, 0x7F, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0xFF, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x7F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x7F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x3F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x1F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x0F, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x07, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x03, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x03, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x01, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7F, 0x80, 0x00, 0xFF, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
























byte shiftled = 0;
byte prevshiftled = 0;
byte shiftlightBlink = 0;
byte shiftChange = 0;
unsigned long BlinkInterval = 100;
unsigned long BlinkPrev = 0;
//unsigned long shiftlightStart = 7000;
//unsigned long shiftlightEnd = 8200;
char Tstart;
byte T1;
byte T2;
unsigned long interval9 = 250;
unsigned long prevtime9;
///////////////Transfer serial/////////////////
int predkosc;
int shiftlightEnd;
int shiftlightStart;
double ratio1;
double ratio2;
double ratio3;
double ratio4;
double ratio5;
double ratio6;
byte submenu = 0;
byte submenu1 = 0;
byte submenu2 = 0;
byte submenu3 = 0;
byte submenu4 = 0;  // shifttime submenu
byte submenu5 = 0;


byte submenu7 = 0;
byte submenu8 = 0;            
byte submenu9 = 0;

byte speedvstpssetupON = 0;
byte speed1set = 0;
byte speed2set = 0;
byte speed3set = 0;
byte speed4set = 0;
byte curentsensor = 0;
byte tpsinput = 0;
double multilow;
double multimid;
double multihigh;


int HomePosition;
int EndPosition;
byte gearRatioSetup;
byte gearRatioSet;
byte gearDisplay;
int Input;
byte shiftlightON;
byte gear1setup;
byte gear2setup;
byte gear3setup;
byte gear4setup;
byte gear5setup;
byte gear6setup;
byte gear;
byte stansetspeed;
byte stancancel;
byte stanham;
byte QSon = 0;
int averageRPM1;
double Kpl;
double Kph;
double Kil;
double Kih;
double Kdl;
double Kdh;
byte PulsesPerRevolution;
int shifttime;
byte menu;
int offset;

int curentTreshholdarray[12] = {0,0,0,0,0,0,0,0,0,0,0,0};

long shifttimearray[3][5] = { {160,140,120,110,100}, {160,140,120,110,100}, {130,120,120,110,100}};



byte red1 = 0;
byte green1 = 200;
byte blue1 = 0;


byte red2 = 100;
byte green2 = 200;
byte blue2 = 0;

byte red3 = 200;
byte green3 = 200;
byte blue3 = 0;

byte red4 = 200;
byte green4 = 100;
byte blue4 = 0;

byte red5 = 200;
byte green5 = 0;
byte blue5 = 0;



byte rend = 0;
byte gend = 0;
byte bend = 255;

byte rgbsetupON = 0;
byte led1setupON = 0;
byte led2setupON = 0;
byte led3setupON = 0;
byte led4setupON = 0;
byte led5setupON = 0;
byte ledendsetupON = 0;
byte RGBsetupcomplited = 0;
byte saveRGB = 0;
byte ledDataSent = 0;


//unsigned long averageRPM;
unsigned long currtime = millis();





void setup() {
  EEPROM.get(19, RGBsetupcomplited);
  if (RGBsetupcomplited > 1){
    RGBsetupcomplited = 0;
    }
  if (RGBsetupcomplited == 1){
    EEPROM.get(1, red1);
    EEPROM.get(2, green1);
    EEPROM.get(3, blue1);
    EEPROM.get(4, red2);
    EEPROM.get(5, green2);
    EEPROM.get(6, blue2);
    EEPROM.get(7, red3);
    EEPROM.get(8, green3);
    EEPROM.get(9, blue3);
    EEPROM.get(10, red4);
    EEPROM.get(11, green4);
    EEPROM.get(12, blue4);
    EEPROM.get(13, red5);
    EEPROM.get(14, green5);
    EEPROM.get(15, blue5);
    EEPROM.get(16, rend);
    EEPROM.get(17, gend);
    EEPROM.get(18, bend); 
  }











  display.begin(SSD1306_SWITCHCAPVCC, 0x3C);

 display.clearDisplay();
 display.display();
 display.drawBitmap(31, 0,  Logo, 64, 61, 1);
  display.display();
  delay(2000);




#if defined(__AVR_ATtiny85__) && (F_CPU == 16000000)
  clock_prescale_set(clock_div_1);
#endif

pixels.begin();
  test();

Serial1.begin(9600);
Serial.begin(9600);


  
}

void loop() {



//test();

    if (shiftChange > shiftled){
      shiftled ++;
    }
    if (shiftChange < shiftled){
      shiftled --;
    }




if (Serial1.available() > 20){

  Tstart = Serial1.read();
  Serial.println(Tstart);
if (Tstart == 'm'){
      menu = Serial1.read();
      Serial.println(menu);
      submenu = Serial1.read();
      //Serial.println(submenu);
      submenu1 = Serial1.read();
      //Serial.println(submenu1);
      submenu2 = Serial1.read();
      //Serial.println(submenu2);   
      submenu3 = Serial1.read();
      //Serial.println(submenu3);
      submenu4 = Serial1.read();
      submenu5 = Serial1.read();
      submenu8 = Serial1.read();
      submenu9 = Serial1.read();
      submenu7 = Serial1.read();
      rgbsetupON = Serial1.read();
      ledDataSent = Serial1.read();
}


  
if (Tstart == '>'){
  T1 = Serial1.read();
  T2 = Serial1.read();
  if(T1 + T2 == 110){
  shiftChange = T1;
  }
  stansetspeed = Serial1.read();
  //Serial.println(stansetspeed);
  stancancel = Serial1.read();
  //Serial.println(stancancel);
  stanham = Serial1.read();
  //Serial.println(stanham);
  QSon = Serial1.read();
  gear = Serial1.read();
  gearRatioSetup = Serial1.read();
  gearRatioSet = Serial1.read();
  gearDisplay = Serial1.read();
  speedvstpssetupON = Serial1.read();
  speed1set = Serial1.read();
  speed2set = Serial1.read();
  speed3set = Serial1.read();
  speed4set = Serial1.read();
  curentsensor = Serial1.read();
  tpsinput = Serial1.read();
  
  predkosc = Serial1.parseInt();
  Serial.println(predkosc);
  averageRPM1 = Serial1.parseInt();
  Serial.println(averageRPM1);
  Input = Serial1.parseInt();
  Serial.println(Input);
  
  
}


//else if (Tstart == 'c'){
//    T1 = Serial1.read();
//  T2 = Serial1.read();
//  if(T1 + T2 == 110){
//  shiftChange = T1;
//  }
//
//  gear = Serial1.read();
//  Input = Serial1.parseInt();
//}

else if (Tstart == 'a'){
  gearDisplay = Serial1.read();
}

else if (Tstart == 'd'){
  Kpl = Serial1.parseFloat();
  Kil = Serial1.parseFloat();
  Kdl = Serial1.parseFloat();
  Kph = Serial1.parseFloat();
  Kih = Serial1.parseFloat();
  Kdh = Serial1.parseFloat();
  
}
else if (Tstart == 'f'){
  PulsesPerRevolution = Serial1.read();
  
}

else if (Tstart == 'j'){
  shifttime = Serial1.parseInt();
}
else if (Tstart == 'o'){
  shiftlightStart = Serial1.parseInt();
  Serial.println(shiftlightStart);
}
else if (Tstart == 'r'){
  shiftlightON = Serial1.read();
}
else if (Tstart == 't'){
  shiftlightEnd = Serial1.parseInt();
  Serial.println(shiftlightEnd);
}
else if (Tstart == 'y'){
ratio1 = Serial1.parseFloat();
ratio2 = Serial1.parseFloat();
ratio3 = Serial1.parseFloat();
ratio4 = Serial1.parseFloat();
ratio5 = Serial1.parseFloat();
ratio6 = Serial1.parseFloat();

  
}
else if (Tstart == 'Q'){
    // for (int i = 0; i <= 2; i++){
      //  for(int a = 0; a <= 4; a++){
          shifttimearray[submenu4][submenu5] = Serial1.parseFloat();
           
      
  
}
else if (Tstart == 'G'){
  gear1setup = Serial1.read();
  gear2setup = Serial1.read();
  gear3setup = Serial1.read();
  gear4setup = Serial1.read();
  gear5setup = Serial1.read();
  gear6setup = Serial1.read();
}
else if (Tstart == 'Z'){
  offset = Serial1.parseInt();
}
else if (Tstart == 'M'){
  multilow = Serial1.parseFloat();
  multimid = Serial1.parseFloat();
  multihigh = Serial1.parseFloat();
}
else if(Tstart == 'B'){
  HomePosition = Serial1.parseInt();
  EndPosition = Serial1.parseInt();
}



else if (Tstart == 'L'){
   led1setupON = Serial1.read();
   led2setupON = Serial1.read();
   led3setupON = Serial1.read();
   led4setupON = Serial1.read();
   led5setupON = Serial1.read();
   ledendsetupON = Serial1.read();
   if (led1setupON == 1){
    red1 = Serial1.read();
    green1 = Serial1.read();
    blue1 = Serial1.read();
   }
   else if (led2setupON == 1){
    red2 = Serial1.read();
    green2 = Serial1.read();
    blue2 = Serial1.read();
   }
   else if (led3setupON == 1){
    red3 = Serial1.read();
    green3 = Serial1.read();
    blue3 = Serial1.read();
   }
   else if (led4setupON == 1){
    red4 = Serial1.read();
    green4 = Serial1.read();
    blue4 = Serial1.read();
   }
   else if (led5setupON == 1){
    red5 = Serial1.read();
    green5 = Serial1.read();
    blue5 = Serial1.read();
   }
   else if (ledendsetupON == 1){
    rend = Serial1.read();
    gend = Serial1.read();
    bend = Serial1.read();
   }
   saveRGB = Serial1.read();
   if (saveRGB == 1){
    RGBsetupsave();
   }
}


}

  

currtime = millis();
if ((currtime - BlinkPrev >= BlinkInterval) && (shiftled == 6) && (rgbsetupON == 0)){
  BlinkPrev = currtime;
  shiftblink();
}
else if ((shiftled <= 5) && (rgbsetupON == 0)){
  shiftlights();
}
else if (rgbsetupON == 1){
  RGBsetup();  
}

if ((currtime - prevtime9 >= interval9)){


if (menu == 0){
  menu0();
}
if (menu == 40){
  menu40();
}
if (predkosc == 0){
if (menu == 10){
  menu10();
              }
if (menu == 20){
  menu20();
   }
if (menu == 30){
menu30();
delay(1000);
if (submenu == 2 || submenu == 3){
  menu = 10; 
              }
else if (submenu == 7){
  menu = 110;              
}
else if (submenu == 9){
  menu = 200;
}
else if (submenu == 10){
  menu = 220;
}
else{
menu = 20;
if((submenu1 >=2) && (submenu1 <=  4)){
  submenu1 = 0;
                    }
else if ((submenu1 >=5) && (submenu1 <= 7)){
  submenu1 = 1;
                    }  
                }
        }
if (menu == 70){
  if (QSon >= 1){
  display.clearDisplay();
  display.drawBitmap(0, 0, qson, 128 , 64, 1);
  display.display();
  //delay(1500);
  //menu = 0;
}
else{
  display.clearDisplay();
  display.drawBitmap(0, 0, qsoff, 128 , 64, 1);
  display.display();
  //delay(1500);
  //menu = 0;
}
}
        
if (menu == 50){
  menu50();
}
if (menu == 60){
  menu60();
}
if (menu == 61){
  menu61();
}
if (menu == 62){
  menu62();
}
if (menu == 90){
  menu90();
}
if (menu == 110){
  menu110();
}
if (menu == 111){
  menu111();
}
if (menu == 112){
  menu112();
}


if (menu == 140){
  menu140();
}
else if (menu == 200){
  menu200();
}
else if (menu == 201){
  menu201();
}
else if (menu == 220){
  menu220();
}
else if (menu == 201){
  menu201();
}
else if (menu == 221){
  menu221();
}
else if (menu == 222){
  menu222();
}
else if (menu == 170){
  menu170();
}
else if (menu == 180){
  menu180();
}



}


prevtime9 = currtime;
if (ledDataSent == 0){
  
Serial1.write('R');
Serial1.write(red1);
Serial1.write(green1);
Serial1.write(blue1);
Serial1.write(red2);
Serial1.write(green2);
Serial1.write(blue2);
Serial1.write(red3);
Serial1.write(green3);
Serial1.write(blue3);
Serial1.write(red4);
Serial1.write(green4);
Serial1.write(blue4);
Serial1.write(red5);
Serial1.write(green5);
Serial1.write(blue5);
Serial1.write(rend);
Serial1.write(gend);
Serial1.write(bend);
}

}










}
void test(){


 pixels.clear();
  pixels.show();
 delay(200);
  
pixels.setPixelColor(0, pixels.Color(red1, green1 , blue1));
pixels.show();
delay(200);
pixels.setPixelColor(1, pixels.Color(red2, green2 , blue2));
pixels.show();
delay(200);
pixels.setPixelColor(2, pixels.Color(red3, green3 , blue3));
pixels.show();
delay(200);
pixels.setPixelColor(3, pixels.Color(red4, green4 , blue4));
pixels.show();
delay(200);
pixels.setPixelColor(4, pixels.Color(red5, green5 , blue5));
pixels.show();
delay(200);
pixels.setPixelColor(4, pixels.Color(0, 0 , 0));
pixels.show();
delay(200);
pixels.setPixelColor(3, pixels.Color(0, 0 , 0));
pixels.show();
delay(200);
pixels.setPixelColor(2, pixels.Color(0, 0 , 0));
pixels.show();
delay(200);
pixels.setPixelColor(1, pixels.Color(0, 0 , 0));
pixels.show();
delay(200);
pixels.setPixelColor(0, pixels.Color(0, 0 , 0));
pixels.show(); 
}



void shiftlights(){
  if ((prevshiftled == 0) && (shiftled == 0)){
  pixels.clear();
  pixels.show();
  }
else if ((prevshiftled == 0) && (shiftled == 1)){
pixels.setPixelColor(0, pixels.Color(red1, green1 , blue1));
pixels.show();
prevshiftled = shiftled;
}
else if ((prevshiftled == 1) && (shiftled == 2)){
pixels.setPixelColor(1, pixels.Color(red2, blue2 , green2));
pixels.show();
prevshiftled = shiftled;
}
else if ((prevshiftled == 2) && (shiftled == 3)){
pixels.setPixelColor(2, pixels.Color(red3, green3 , blue3));
pixels.show();
prevshiftled = shiftled;
}
else if ((prevshiftled == 3) && (shiftled == 4)){
pixels.setPixelColor(3, pixels.Color(red4, green4 , blue4));
pixels.show();
prevshiftled = shiftled;
}
else if ((prevshiftled == 4) && (shiftled == 5)){
pixels.setPixelColor(4, pixels.Color(red5, green5 , blue5));
pixels.show();
prevshiftled = shiftled;
}
else if ((prevshiftled == 6) && (shiftled == 5)){
pixels.setPixelColor(0, pixels.Color(red1, green1 , blue1));
pixels.setPixelColor(1, pixels.Color(red2, green2 , blue2));
pixels.setPixelColor(2, pixels.Color(red3, green3 , blue3));
pixels.setPixelColor(3, pixels.Color(red4, green4 , blue4));
pixels.setPixelColor(4, pixels.Color(red5, green5 , blue5));
pixels.show();
prevshiftled = shiftled;
}
else if ((prevshiftled == 5) && (shiftled == 4)){
pixels.setPixelColor(4, pixels.Color(0, 0 , 0));
pixels.show();
prevshiftled = shiftled;
}
else if ((prevshiftled == 4) && (shiftled == 3)){
pixels.setPixelColor(3, pixels.Color(0, 0 , 0));
pixels.show();
prevshiftled = shiftled;
}
else if ((prevshiftled == 3) && (shiftled == 2)){
pixels.setPixelColor(2, pixels.Color(0, 0 , 0));
pixels.show();
prevshiftled = shiftled;
}
else if ((prevshiftled == 2) && (shiftled == 1)){
pixels.setPixelColor(1, pixels.Color(0, 0 , 0));
pixels.show();
prevshiftled = shiftled;
}
else if ((prevshiftled == 1) && (shiftled == 0)){
pixels.setPixelColor(0, pixels.Color(0, 0 , 0));
pixels.show();
prevshiftled = shiftled;
}


 
}
void shiftblink(){
if (shiftlightBlink == 0){
pixels.clear();
  pixels.show();
shiftlightBlink = 1;
prevshiftled = shiftled;
}

else if(shiftlightBlink == 1){  
pixels.setPixelColor(0, pixels.Color(rend, gend , bend));
pixels.setPixelColor(1, pixels.Color(rend, gend , bend));
pixels.setPixelColor(2, pixels.Color(rend, gend , bend));
pixels.setPixelColor(3, pixels.Color(rend, gend , bend));
pixels.setPixelColor(4, pixels.Color(rend, gend , bend));
pixels.show();
shiftlightBlink = 0;
prevshiftled = shiftled;
}
  
}


void RGBsetup(){
if ((led1setupON == 1) || (led2setupON ==1) || (led3setupON == 1) || (led4setupON == 1) || (led5setupON == 1)){  

pixels.setPixelColor(0, pixels.Color(red1, green1 , blue1));
pixels.setPixelColor(1, pixels.Color(red2, green2 , blue2));
pixels.setPixelColor(2, pixels.Color(red3, green3 , blue3));
pixels.setPixelColor(3, pixels.Color(red4, green4 , blue4));
pixels.setPixelColor(4, pixels.Color(red5, green5 , blue5));
pixels.show();
}
else if (ledendsetupON == 1){
    currtime = millis();
if (currtime - BlinkPrev >= BlinkInterval){
  BlinkPrev = currtime;
  shiftblink();
}
}
}
void RGBsetupsave(){

pixels.setPixelColor(0, pixels.Color(0, 0 , 0));
pixels.setPixelColor(1, pixels.Color(0, 0 , 0));
pixels.setPixelColor(2, pixels.Color(0, 0 , 0));
pixels.setPixelColor(3, pixels.Color(0, 0 , 0));
pixels.setPixelColor(4, pixels.Color(0, 0 , 0));
pixels.show();

EEPROM.write(1, red1);
EEPROM.write(2, green1);
EEPROM.write(3, blue1);
EEPROM.write(4, red2);
EEPROM.write(5, green2);
EEPROM.write(6, blue2);
EEPROM.write(7, red3);
EEPROM.write(8, green3);
EEPROM.write(9, blue3);
EEPROM.write(10, red4);
EEPROM.write(11, green4);
EEPROM.write(12, blue4);
EEPROM.write(13, red5);
EEPROM.write(14, green5);
EEPROM.write(15, blue5);
EEPROM.write(16, rend);
EEPROM.write(17, gend);
EEPROM.write(18, bend);
RGBsetupcomplited = 1;
EEPROM.write(19, RGBsetupcomplited);
saveRGB = 0;

  
}




void menu112(){
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 20); 

  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[44])));
  display.println(buffer);
  display.print(shiftlightEnd);
  display.display();


  
}


void menu90()
{
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 10);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[32])));
  display.print(buffer);
  display.println(ratio1);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[33])));
  display.print(buffer);
  display.println(ratio2);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[34])));
  display.print(buffer);
  display.println(ratio3);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[35])));
  display.print(buffer);
  display.println(ratio4);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[36])));
  display.print(buffer);
  display.println(ratio5);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[37])));
  display.print(buffer);
  display.println(ratio6);
  display.display();
    
}

void menu110(){
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 0);
if (submenu3 == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[38])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[43])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[40])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[41])));
  display.print(buffer);
  if (shiftlightON == 1) {
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.print(buffer);    
  }
  else {
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.print(buffer);     
  }
}
if (submenu3 == 1){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[38])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[39])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[44])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[41])));
  display.print(buffer);
  if (shiftlightON == 1) {
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.print(buffer);    
  }
  else {
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.print(buffer);     
  }
}
if (submenu3 == 2){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[38])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[39])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[40])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[45])));
  display.print(buffer);
  if (shiftlightON == 1) {
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.print(buffer);    
  }
  else {
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.print(buffer);     
  }
}
  display.display();



}



void menu111(){
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE); 
display.setCursor(0, 20); 

  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[43])));
  display.println(buffer);
  display.print(shiftlightStart);
  display.display();



}

void menu0()          // menu0 poczatek
{
if (speedvstpssetupON == 1){
    if (speed1set == 0){
      display.clearDisplay();
      display.setTextSize(5);
      display.setTextColor(WHITE);   
      display.setCursor(0, 0);
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[77])));
      display.print(buffer);        
      display.display();
    }
    else if ((speed1set == 1) && (speed2set == 0)){
                    display.clearDisplay();
                    display.setTextSize(5);
                    display.setTextColor(WHITE);   
                    display.setCursor(0, 0);
                    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[78])));
                    display.print(buffer);        
                    display.display();      
                    }
                else if ((speed1set == 1) && (speed2set == 1) && (speed3set == 0)){
                        display.clearDisplay();
      display.setTextSize(5);
      display.setTextColor(WHITE);   
      display.setCursor(0, 0);
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[79])));
      display.print(buffer);        
      display.display();
                }
                else if((speed1set == 1) && (speed2set == 1) && (speed3set == 1) && (speed4set == 0)){
                        display.clearDisplay();
      display.setTextSize(5);
      display.setTextColor(WHITE);   
      display.setCursor(0, 0);
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[80])));
      display.print(buffer);        
      display.display();
                }

}



  
else if (gearRatioSetup == 1){
    if (gear1setup == 0){
       display.clearDisplay();
        display.drawBitmap(0, 0,  gear1, 128, 64, 1);
         display.display();
    }
      else if ((gear1setup == 1) && (gear2setup == 0)){
        display.clearDisplay();
        display.drawBitmap(0, 0,  gear2, 128, 64, 1);
         display.display();
      }
      else if ((gear1setup == 1) && (gear2setup == 1) && (gear3setup == 0)){
         display.clearDisplay();
        display.drawBitmap(0, 0,  gear3, 128, 64, 1);
         display.display();
      }
      else if ((gear1setup == 1) && (gear2setup == 1) && (gear3setup == 1) && (gear4setup == 0)){
          display.clearDisplay();
        display.drawBitmap(0, 0,  gear4, 128, 64, 1);
         display.display();
      }
      else if ((gear1setup == 1) && (gear2setup == 1) && (gear3setup == 1) && (gear4setup == 1) && (gear5setup == 0)){
          display.clearDisplay();
        display.drawBitmap(0, 0,  gear5, 128, 64, 1);
         display.display();
      }
      else if ((gear1setup == 1) && (gear2setup == 1) && (gear3setup == 1) && (gear4setup == 1) && (gear5setup == 1) && (gear6setup == 0)){
          display.clearDisplay();
        display.drawBitmap(0, 0,  gear6, 128, 64, 1);
         display.display();
      }
} else {



  if ((Input > 100) && ((gearRatioSet == 0) && (gearDisplay == 1) || (gearRatioSet == 1) && (gearDisplay == 0))){
 display.clearDisplay();
 display.drawBitmap(0, 0,  Ready, 128, 64, 1);
 display.display();
 }
else if ((Input > 0 ) && (gearRatioSet == 1) && (gearDisplay == 1) && (gearRatioSetup == 0)){
  if (gear == 1){
display.clearDisplay();
        display.drawBitmap(0, 0,  gear1, 128, 64, 1);
         display.display();   
          }
         else if (gear == 2){
            display.clearDisplay();
        display.drawBitmap(0, 0,  gear2, 128, 64, 1);
         display.display();
          }
           else if (gear == 3){
              display.clearDisplay();
        display.drawBitmap(0, 0,  gear3, 128, 64, 1);
         display.display();
            }
             else if (gear == 4){
                display.clearDisplay();
        display.drawBitmap(0, 0,  gear4, 128, 64, 1);
         display.display();
              }
                     else if (gear == 5){
                        display.clearDisplay();
        display.drawBitmap(0, 0,  gear5, 128, 64, 1);
         display.display();
                      }
                         else if (gear == 6){
                            display.clearDisplay();
        display.drawBitmap(0, 0,  gear6, 128, 64, 1);
         display.display();
                          }
                              else if (gear == 0){
                                display.clearDisplay();
        display.drawBitmap(0, 0,  gearN, 128, 64, 1);
         display.display();
                              }
                          }




 
else {
display.clearDisplay();
display.setTextSize(1);
display.setTextColor(WHITE);   
display.setCursor(0, 0);
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[0])));
display.print(buffer);
if (stansetspeed == 1){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
 }
else if(stansetspeed == 0) {
 strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
}
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[1])));
display.print(buffer);
if (stancancel == 1){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
}
else if(stancancel == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
}
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[2])));
display.print(buffer);
if (stanham == 1){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
}
else if (stanham == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
}
display.setTextSize(1);
display.setTextColor(WHITE);
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[3])));
display.print(buffer);
display.println(predkosc);
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[22])));
display.print(buffer);
if (QSon == 1){
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
display.println(buffer);  
}
else if (QSon == 0){
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));  
display.println(buffer);
}
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[25])));
  display.print(buffer);
  display.print(averageRPM1);


display.display();
}               // menu0 koniec
}
}
void menu10()
{
display.clearDisplay();
display.setTextSize(1);   
display.setTextColor(WHITE);
display.setCursor(0, 0);
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[19])));
  display.println(buffer);
  if (submenu == 0){
   strcpy_P(buffer, (char *)pgm_read_word(&(string_table[16]))); 
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[7])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[8])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[17])));
  display.println(buffer);
   strcpy_P(buffer, (char *)pgm_read_word(&(string_table[23])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[26])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[28])));
  display.print(buffer);
  if (gearDisplay == 1){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
   else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[30])));
  display.print(buffer);
}
if (submenu == 1){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[7])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[16])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[8])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[17])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[23])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[26])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[28])));
  display.print(buffer);
  if ((gearDisplay == 1) && (gearRatioSet == 1)){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
  else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[30])));
  display.print(buffer);
}
if (submenu == 2){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[7])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[8])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[18])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[23])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[26])));
  display.println(buffer);  
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[28])));
  display.print(buffer);
  if ((gearDisplay == 1) && (gearRatioSet == 1)){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
  else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[30])));
  display.print(buffer);
}
if (submenu == 3){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[7])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[8])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[17])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[24])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[26])));
  display.println(buffer);    
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[28])));
  display.print(buffer);
  if ((gearDisplay == 1) && (gearRatioSet == 1)){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
  else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[30])));
  display.print(buffer);
}
if (submenu == 4){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[7])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[8])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[17])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[23])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[27])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[28])));
  display.print(buffer);
  if ((gearDisplay == 1) && (gearRatioSet == 1)){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
  else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[30])));
  display.print(buffer);
}
if (submenu == 5){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[7])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[8])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[17])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[23])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[26])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[29])));
  display.print(buffer);
  if ((gearDisplay == 1) && (gearRatioSet == 1)){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
  else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[30])));
  display.print(buffer);


  
}
if (submenu == 6){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[7])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[8])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[17])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[23])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[26])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[28])));
  display.print(buffer);
  if ((gearDisplay == 1) && (gearRatioSet == 1)){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
  else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[31])));
  display.print(buffer);


  
}   
if (submenu == 7){

  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[8])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[17])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[23])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[26])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[28])));
  display.print(buffer);
  if ((gearDisplay == 1) && (gearRatioSet == 1)){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
  else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[30])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[42])));
  display.println(buffer);

  
}      
if (submenu == 8){



  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[17])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[23])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[26])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[28])));
  display.print(buffer);
  if ((gearDisplay == 1) && (gearRatioSet == 1)){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
  else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[30])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[38])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[62])));
  display.println(buffer);
  
}      
     
if (submenu == 9){



  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[23])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[26])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[28])));
  display.print(buffer);
  if ((gearDisplay == 1) && (gearRatioSet == 1)){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
  else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[30])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[38])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[63])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[65])));
  display.println(buffer);
  
}    
if (submenu == 10){




  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[26])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[28])));
  display.print(buffer);
  if ((gearDisplay == 1) && (gearRatioSet == 1)){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);
  }
  else{
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[30])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[38])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[63])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[66])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[68])));
  display.println(buffer);  
}   
   
   
   
   
   display.display();
  }




void menu20()
{
display.clearDisplay();
display.setTextSize(1);
display.setTextColor(WHITE);   
display.setCursor(0, 0);

  
 if (submenu1 == 0){              
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[7])));
  display.println(buffer);
  if( submenu2 == 0){
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[9])));
    display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[12])));  
     display.println(buffer);
     strcpy_P(buffer, (char *)pgm_read_word(&(string_table[14])));
      display.print(buffer);
  }
if (submenu2 == 1){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[10])));
display.println(buffer);
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[11])));
     display.println(buffer);
     strcpy_P(buffer, (char *)pgm_read_word(&(string_table[14])));
      display.print(buffer);
}
if (submenu2 == 2){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[10])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[12])));   
     display.println(buffer);
     strcpy_P(buffer, (char *)pgm_read_word(&(string_table[13])));
      display.print(buffer);     
}
}
if (submenu1 == 1){              
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[6])));
  display.print(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[8])));
  display.println(buffer);
  if( submenu2 == 0){
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[9])));
    display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[12])));  
     display.println(buffer);
     strcpy_P(buffer, (char *)pgm_read_word(&(string_table[14])));
      display.print(buffer);
  }
if (submenu2 == 1){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[10])));
display.println(buffer);
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[11])));
     display.println(buffer);
     strcpy_P(buffer, (char *)pgm_read_word(&(string_table[14])));
      display.print(buffer);
}
if (submenu2 == 2){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[10])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[12])));   
     display.println(buffer);
     strcpy_P(buffer, (char *)pgm_read_word(&(string_table[13])));
      display.print(buffer);      
}
}
if(submenu1 == 2 || submenu1 == 5){
display.setCursor(0, 25);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[9])));
    display.print(buffer);
  if(submenu1 == 2){
    display.print(Kpl);
  }
 if(submenu1 == 5){
  display.print(Kph);
 }
}
if(submenu1 == 3 || submenu1 == 6){
display.setCursor(0, 25);
 strcpy_P(buffer, (char *)pgm_read_word(&(string_table[12])));  
     display.print(buffer);
  if(submenu1 == 3){
    display.print(Kil);
  }
 if(submenu1 == 6){
  display.print(Kih);
 }
}
if(submenu1 == 4 || submenu1 == 7){
 display.setCursor(0, 25);
 strcpy_P(buffer, (char *)pgm_read_word(&(string_table[14])));
      display.print(buffer);
  if(submenu1 == 4){
    display.print(Kdl);
  }
 if(submenu1 == 7){
  display.print(Kdh);
 }
}
display.display();
}
void menu30()
{
display.clearDisplay();
display.setTextSize(1);
display.setTextColor(WHITE);   
display.setCursor(25, 30);
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[15])));
      display.print(buffer);
display.display();
}
void menu40()
{
 display.clearDisplay();
 display.drawBitmap(0, 0,  cruise, 128, 64, 1);
 display.display();
}
void menu50()
{
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 25);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[20])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[21])));
  display.print(buffer); 
  display.print(PulsesPerRevolution);
   display.display(); 
}
void menu60()
{
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 10);
if (submenu4 == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[49])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[47])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[48])));
  display.println(buffer);
}
else if (submenu4 == 1){

  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[46])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[50])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[48])));
  display.println(buffer);
}

else if (submenu4 == 2){

  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[46])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[47])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[51])));
  display.println(buffer);
}


  
   display.display(); 
}
void menu61()
{
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 10);

if (submenu5 == 0){
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[57])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[53])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[54])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[55])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[56])));
  display.println(buffer);
}
else if (submenu5 == 1){
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[52])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[58])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[54])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[55])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[56])));
  display.println(buffer);
}
else if (submenu5 == 2){
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[52])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[53])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[59])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[55])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[56])));
  display.println(buffer);
}
else if (submenu5 == 3){
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[52])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[53])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[54])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[60])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[56])));
  display.println(buffer);
}
else if (submenu5 == 4){
      strcpy_P(buffer, (char *)pgm_read_word(&(string_table[52])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[53])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[54])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[55])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[61])));
  display.println(buffer);
}

   display.display(); 
  
}

void menu62(){
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 25);
display.print(shifttimearray[submenu4][submenu5]);

   display.display();


  
}


void menu140()
{
display.clearDisplay();
display.setTextSize(1);
display.setTextColor(WHITE);   
display.setCursor(10, 30);
strcpy_P(buffer, (char *)pgm_read_word(&(string_table[64])));
      display.print(buffer);
display.display();
delay(2000);
menu = 0;
}



void menu200(){
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 25);

if (submenu8 == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[69])));
  display.print(buffer);
    if (curentsensor == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
  else if (curentsensor == 1){  
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);  
  }
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[72])));
  display.println(buffer);
}
else if (submenu8 == 1){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[70])));
  display.print(buffer);
      if (curentsensor == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
  else if (curentsensor == 1){  
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);  
  }
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[71])));
  display.println(buffer);

  
}


  
   display.display();


  
}

void menu220(){
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 25);

if (submenu9 == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[73])));
  display.print(buffer);
  if (tpsinput == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
  else if (tpsinput == 1){  
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);  
  }
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[75])));
  display.println(buffer);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[82])));
  display.println(buffer);


  
}
else if (submenu9 == 1){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[74])));
  display.print(buffer);
    if (tpsinput == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
  else if (tpsinput == 1){  
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);  
  }
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[76])));
  display.println(buffer);
  
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[82])));
  display.println(buffer);

  
}
else if (submenu9 == 2){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[74])));
  display.print(buffer);
    if (tpsinput == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[5])));
  display.println(buffer);
  }
  else if (tpsinput == 1){  
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[4])));
  display.println(buffer);  
  }
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[75])));
  display.println(buffer);
  
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[81])));
  display.println(buffer);

  
}




  
   display.display();






  
}

void menu201(){
  
display.clearDisplay();
display.setTextSize(1);
display.setTextColor(WHITE);   
display.setCursor(10, 30);
display.print(offset);
display.display();  
}
void menu222(){
display.clearDisplay();
display.setTextSize(1);
display.setTextColor(WHITE);   
display.setCursor(10, 30);

if (submenu7 == 0){
  display.print(multilow);
}
else if (submenu7 == 1){
  display.print(multimid);
}
else if (submenu7 == 2){
  display.print(multihigh);
}
display.display();
}

void menu221(){
 display.clearDisplay();
display.setTextSize(1);
display.setTextColor(WHITE);   
display.setCursor(0, 30);

if (submenu7 == 0){
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[83])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[86])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[88])));
  display.println(buffer);

 
}
else if (submenu7 == 1){
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[84])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[85])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[88])));
  display.println(buffer);
  
}
else if (submenu7 == 2){
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[84])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[86])));
  display.println(buffer);
    strcpy_P(buffer, (char *)pgm_read_word(&(string_table[87])));
  display.println(buffer);
 


 
}
display.display();
}
void menu170(){
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 25);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[90])));
  display.println(buffer);

  display.print(HomePosition);
   display.display();  
}
void menu180(){
display.clearDisplay();
display.setTextSize(1);  
display.setTextColor(WHITE);
display.setCursor(0, 25);
  strcpy_P(buffer, (char *)pgm_read_word(&(string_table[92])));
  display.println(buffer);

  display.print(EndPosition);
   display.display();  
  
}
